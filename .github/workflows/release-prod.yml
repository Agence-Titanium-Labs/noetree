name: Deploy Production from Tag

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Git tag to deploy (ex: v1.45.2)"
        required: true

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify tag exists
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git fetch --tags

          # Check if the input tag already exists
          if ! git rev-parse --verify refs/tags/"${{ github.event.inputs.tag }}" &>/dev/null; then
            echo "Creating tag ${{ github.event.inputs.tag }}..."
            # Create the input tag on the current commit
            git tag "${{ github.event.inputs.tag }}"
            # Push the tag
            git push origin "${{ github.event.inputs.tag }}"
          else
            echo "Tag ${{ github.event.inputs.tag }} already exists, using existing tag"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel (Production)
        run: |
          # Configure Vercel CLI with token
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

          # Deploy to production environment
          echo "Deploying version ${{ github.event.inputs.tag }} to noetree.com..."

          vercel deploy \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --meta version=${{ github.event.inputs.tag }} \
            --prod

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: "Production Release ${{ github.event.inputs.tag }}"
          body: |
            This is a production version deployed to noetree.com

            Release version: ${{ github.event.inputs.tag }}
            Deployment date: ${{ github.event.created_at }}
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
